name: Generate Trivia Questions

on:
  workflow_dispatch:
    inputs:
      number_of_questions:
        description: 'Number of trivia questions to generate'
        required: true
        default: 5

jobs:
  generate-trivia:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install openai node-fetch fs-extra

      - name: Generate trivia questions
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          BING_SEARCH_API_KEY: ${{ secrets.BING_SEARCH_API_KEY }}
          INPUT_NUMBER_OF_QUESTIONS: ${{ github.event.inputs.number_of_questions }}
        run: |
          node <<'EOF'
          import fs from 'fs-extra';
          import OpenAI from 'openai';
          import fetch from 'node-fetch';

          const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
          const numQuestions = parseInt(process.env.INPUT_NUMBER_OF_QUESTIONS || '5', 10);
          const filePath = './questions.json';

          // Ensure file exists
          if (!fs.existsSync(filePath)) fs.writeFileSync(filePath, '[]', 'utf-8');

          let questions = JSON.parse(fs.readFileSync(filePath, 'utf-8'));

          for (let i = 0; i < numQuestions; i++) {
            // Choose a topic from existing questions or default
            const topic = questions.length ? questions[Math.floor(Math.random()*questions.length)].category : "General Knowledge";

            // Simple Bing Web Search
            let snippet = '';
            try {
              const res = await fetch(`https://api.bing.microsoft.com/v7.0/search?q=${encodeURIComponent(topic)} trivia`, {
                headers: { 'Ocp-Apim-Subscription-Key': process.env.BING_SEARCH_API_KEY }
              });
              const data = await res.json();
              if (data.webPages && data.webPages.value && data.webPages.value.length > 0) {
                snippet = data.webPages.value[0].snippet;
              }
            } catch (err) {
              console.warn('Web search failed:', err);
            }

            const prompt = `
You are a trivia question generator.
Use this snippet for context if helpful: "${snippet}"
Generate 1 trivia question in JSON:

 {
    "question": "What is 3 × 3?",
    "answers": ["6", "9", "12", "33"],
    "correct": 1,
    "explanations": [
      "6 is the result of addition (3 + 3), not multiplication.",
      "Correct! 3 × 3 = 9.",
      "12 is 3 × 4, not 3 × 3.",
      "33 is just the digits 3 and 3 together, not the product."
    ]
  }

Category: ${topic}
Ensure JSON is valid and nothing else.
`;

            const completion = await openai.chat.completions.create({
              model: "o4-mini",
              messages: [{ role: "user", content: prompt }],
              max_tokens: 300,
            });

            try {
              const q = JSON.parse(completion.choices[0].message.content);
              if (q.question && Array.isArray(q.answers) && typeof q.correct_index === 'number') {
                questions.push(q);
              } else {
                console.warn('Skipped invalid question:', completion.choices[0].message.content);
              }
            } catch (e) {
              console.warn('Failed to parse JSON:', completion.choices[0].message.content);
            }
          }

          fs.writeFileSync(filePath, JSON.stringify(questions, null, 2));
          EOF

      - name: Commit and push questions.json
        uses: EndBug/add-and-commit@v9
        with:
          author_name: 'github-actions[bot]'
          author_email: 'github-actions[bot]@users.noreply.github.com'
          message: 'Add new trivia questions'
          add: 'questions.json'
